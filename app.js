const path=require("path"),express=require("express"),dotenv=require("dotenv"),passport=require("passport"),session=require("express-session"),MongoStore=require("connect-mongo"),bodyParser=require("body-parser"),connectDB=require("./config/db");dotenv.config({path:"./config/config.env"}),require("./config/passport")(passport),connectDB();const app=express();app.use(bodyParser.json()).use((req,res,next)=>{res.setHeader("Access-Control-Allow-Origin","*"),res.setHeader("Access-Control-Allow-Headers","Origin, X-Requested-With, Content-Type, Accept, Z-Key"),res.setHeader("Access-Control-Allow-Methods","GET, POST, PUT, DELETE, OPTIONS"),next()}),app.use(session({secret:"keyboard cat",resave:!1,saveUninitialized:!1,store:MongoStore.create({mongoUrl:process.env.MONGO_URI}),cookie:{maxAge:864e5}})),app.use(passport.initialize()).use(passport.session()),app.use("/",require("./routes")),process.on("uncaughtException",(err,origin)=>{console.log(process.stderr.fd,`Caught exception: ${err}\n`+`Exception origin: ${origin}`)});const PORT=process.env.PORT||3e3;app.listen(PORT,console.log(`Server running on port ${process.env.PORT}`));