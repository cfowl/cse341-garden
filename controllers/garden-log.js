const ObjectId=require("mongodb").ObjectId,db=require("../models"),GardenLog=db.gardenLog;async function getAllEntries(req,res){GardenLog.find().then(gLog=>{res.status(200).json(gLog)}).catch(err=>{res.status(500).json({message:err})})}async function getOneEntry(req,res){ObjectId.isValid(req.params.id)?GardenLog.findById(req.params.id).then(gLog=>{gLog?res.status(200).json(gLog):res.status(404).json({message:"Garden Log with that ID not found!"})}).catch(err=>{res.status(500).json({message:err})}):res.status(400).json("Must use a valid seed ID to get a seed's info.")}async function createEntry(req,res){const gLog=new GardenLog({year:req.body.year,seedName:req.body.seedName,seedType:req.body.seedType,variety:req.body.variety,plantedQty:req.body.plantedQty,plantedDate:req.body.plantedDate,harvestedQty:req.body.harvestedQty,harvestedDate:req.body.harvestedDate,notes:req.body.notes});gLog.save().then(gLog=>{res.status(201).json({message:"Garden Log was added successfully!",gLog:gLog})}).catch(err=>{res.status(500).json({message:"Garden Log was not saved!",error:err})})}async function updateEntry(req,res){ObjectId.isValid(req.params.id)?GardenLog.findByIdAndUpdate(req.params.id,req.body,{useFindAndModify:!1}).then(gLog=>{gLog?res.status(204).json({message:"The Garden Log was updated successfully!"}):res.status(404).json({message:"Garden Log with that ID was not found and could not be updated!"})}).catch(err=>{res.status(500).json({message:"Garden Log was not updated!",error:err})}):res.status(400).json("Must use a valid seed ID to update a seed's info.")}async function deleteEntry(req,res){ObjectId.isValid(req.params.id)?GardenLog.findByIdAndRemove(req.params.id).then(gLog=>{gLog?res.status(204).json({message:"The Garden Log was deleted successfully!"}):res.status(404).json({message:"Garden Log with that ID was not found and coule not be deleted!"})}).catch(err=>{res.status(500).json({message:"Garden Log was not deleted!",error:err})}):res.status(400).json("Must use a valid seed ID to delete a seed's info.")}module.exports={getAllEntries:getAllEntries,getOneEntry:getOneEntry,createEntry:createEntry,updateEntry:updateEntry,deleteEntry:deleteEntry};